/*
 * outlier_segmentation.h
 *
 *  Created on: Dec 14, 2014
 *      Author: Vanderlei Cunha Jr.
 */

#ifndef OUTLIER_SEGMENTATION_H_
#define OUTLIER_SEGMENTATION_H_

#include<Fixtures/virtual_fixtures.h>
using namespace std;
using namespace pcl;
using namespace ros;

/*Initialize Publisher and Subscriber*/
Publisher pub_seg;
Subscriber sub_raw_data;

/*Objects for storing manipulated cloud data  */
PointCloud<PointXYZRGB>::Ptr INLIERPoints(new PointCloud<PointXYZRGB> ); // object for storing inlier point clouds
PointCloud<PointXYZRGB>::Ptr segCloudPtr(new PointCloud<PointXYZRGB> ()); // object for storing desired points clouds
PointCloud<PointXYZRGB>::Ptr planeExtractedPtr(new pcl::PointCloud<PointXYZRGB> ());  //object for storing extracted clouds
PointCloud<PointXYZRGB>::Ptr concaveHull(new PointCloud<PointXYZRGB>); // object for displaying concave hull pointcloud
PointCloud<PointXYZRGB>::Ptr planePtr(new PointCloud<PointXYZRGB> ());
PointCloud<PointXYZRGB>::Ptr needsFilterPtr(new PointCloud<PointXYZRGB> ());

/*Segmentation and algorith driven objects*/
ModelCoefficients::Ptr coefficients(new ModelCoefficients); //object for storing model coefficients
SACSegmentation<PointXYZRGB> segmentation; // segmentation object
PointIndices::Ptr inlierIndices(new PointIndices); //point indices object


/*Sensor Message*/
sensor_msgs::PointCloud2 pc_data;

/*Segmentation distance between each segmentation threshold and max iteration*/
double max_thresh = 0.025; //mm
double max_iteration = 50;
#endif /* OUTLIER_SEGMENTATION_H_ */
